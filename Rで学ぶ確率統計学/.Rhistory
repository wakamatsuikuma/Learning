result <- chisq.test(table)
result
result$stdres
pnorm(abs(result$stdres), lower.tail = FALSE) * 2
seq <- c(1, 15, 22, 62)
matrix(seq, 2, 2)
seq <- c(1, 15, 22, 62)
table <- matrix(seq, 2, 2)
result <- chisq(table)
seq <- c(1, 15, 22, 62)
table <- matrix(seq, 2, 2)
result <- chisq.test(table)
result
seq <- c(1, 15, 22, 62)
table <- matrix(seq, 2, 2)
chisq.test(table)
chisq.test(table, correct = FALSE)
cars
cars
plot(cars)
plot(cars) # 散布図
res_const <- lm(data = cars, formula = dist ~ speed)
res_no_const <- lm(data = cars, formula = dist ~ speed - 1)
summary(res_const)
summary(res_no_const)
plot(cars) # 散布図
res_const <- lm(data = cars, formula = dist ~ speed)
res_no_const <- lm(data = cars, formula = dist ~ speed - 1)
summary(res_const)
summary(res_no_const)
abline(res_const)
abline(res_no_const, lty = "dotted")
airquality
airquality.Wind
airquality$Wind
w <- airquality$Wind
o <- airquality$Ozone
plot(w, o)
w <- airquality$Wind
o <- airquality$Ozone
plot(w, o)
res <- lm(data = airquality, formula = Ozone ~ Wind)
abline(res)
# オゾン量とオゾン濃度の関係
w <- airquality$Wind
o <- airquality$Ozone
plot(w, o)
res <- lm(data = airquality, formula = Ozone ~ Wind)
abline(res)
summary(res)
# 回帰分析における定数項の有無による決定係数の変化
plot(cars) # 散布図
res_const <- lm(data = cars, formula = dist ~ speed)
res_no_const <- lm(data = cars, formula = dist ~ speed - 1)
summary(res_const)
summary(res_no_const)
abline(res_const)
abline(res_no_const, lty = "dotted")
# Multiple R-squared:  0.6511,	Adjusted R-squared:  0.6438
# Multiple R-squared:  0.8963,	Adjusted R-squared:  0.8942
# 定数項が無い方(パラメータが少ない方)が決定係数が大きくなっていて(当てはまりの良いモデルになっている)違和感
# これは定数項が無い時点で、決定係数の定義が当てはまりを評価できない式になってしまい、本来の意味を失うため
# オゾン量とオゾン濃度の関係
w <- airquality$Wind
o <- airquality$Ozone
plot(w, o)
res <- lm(data = airquality, formula = Ozone ~ Wind)
abline(res)
summary(res)
# 5.55 ppb減少
data(women)
women
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
abline(res_quad)
abline(res_liner)
abline(res_quad)
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
AIC(res_liner, res_quad)
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
AIC(res_liner, res_quad)
data(women)
women
res_liner <- lm(data = women, formula = weight ~ height)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
summary(res_liner)
summary(res_quad)
AIC(res_liner, res_quad)
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
AIC(res_liner, res_quad)
x <- seq(-5, 5, 5)
x <- seq(-5, 5, 5)
x
x <- seq(-5, 5, length = 5)
x
# 定数項有り: R2とAICの両方を比較
res_liner <- lm(data = women, formula = weight ~ height)
x <- seq(-5, 5, length = 1000)
y <- seq(0.1, 8, length = 1000)
z <- outer(x, y, function(x, y) x^2/(2*y^2) + log(y) + (1 / y^2 - 1) / 2)
contour(x, y, z, level = seq(0.01, 2, by=0.5))
x <- seq(-5, 5, length = 1000)
y <- seq(0.1, 8, length = 1000)
z <- outer(x, y, function(x, y) x^2/(2*y^2) + log(y) + (1 / y^2 - 1) / 2)
filled.contour(x, y, z, level = seq(0.01, 2, by=0.5))
# 定数項有り: R2とAICの両方を比較
res_liner <- lm(data = women, formula = weight ~ height)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
summary(res_liner)
summary(res_quad)
AIC(res_liner, res_quad)
# R2ではそこまで差が無いが、AICでは顕著に差が見られた。2次式の方が当てはまりが良い。
# 定数項0: R2は本来の意味を失うので、AICで当てはまりを比較する
res_liner <- lm(data = women, formula = weight ~ height - 1)
res_quad <- lm(data = women, formula = weight ~ I(height^2) + height - 1)
plot(women)
abline(res_liner)
lines(women$height, fitted(res_quad))
AIC(res_liner, res_quad)
# こちらも2次式の方が当てはまりが良い。
# 等高線の描画（KL(カルバック・ライブラー)情報量をイメージ）。
x <- seq(-5, 5, length = 1000)
y <- seq(0.1, 8, length = 1000)
z <- outer(x, y, function(x, y) x^2/(2*y^2) + log(y) + (1 / y^2 - 1) / 2)
filled.contour(x, y, z, level = seq(0.01, 2, by=0.5))
Prestige
install.package(car)
install.packages(car)
install.packages("car")
library(car)
library("car")
Prestige
income <- Prestige$income
hist(income)
head(Prestige)
income <- Prestige$income
hist(income, breaks = 10)
hist(log(income), breaks = 10)
head(Prestige)
income <- Prestige$income
hist(income, breaks = 10)
hist(log(income), breaks = 10) # 正規分布っぽくなっている
res1 <- lm(data = Prestige, formula = prestige ~ education + income)
res2 <- lm(data = Prestige, formula = prestige ~ education + log(income))
summary(res1)
summary(res2)
AIC(res1, res2)
res1 <- lm(data = Prestige, formula = prestige ~ education + income - 1)
res2 <- lm(data = Prestige, formula = prestige ~ education + log(income) - 1)
AIC(res1, res2) # 定数項0とするため、R2は意味が無いので除く
res1 <- lm(data = Prestige, formula = prestige ~ education + income - 1)
res2 <- lm(data = Prestige, formula = prestige ~ education + log(income) - 1)
summary(res1)
summary(res2)
AIC(res1, res2) # 定数項0とするため、R2は意味が無いので除く
## install.packages("car")
## library("car")
head(Prestige)
read.csv("../csv/Production.csv")
read.csv("../csv/Production.csv")
read.csv("../csv/Production.csv")
read.csv("Production.csv")
a <- read.csv("Production.csv")
a <- read.csv("csv/Production.csv")
data <- read.csv("csv/Production.csv")
res <- lm(data = data, formula = log(Output) - log(Capital) ~ (log(Labor) - log(Capital)))
summary(res)
# 式変形により、以下の回帰モデルで分析が可能
data <- read.csv("csv/Production.csv")
res <- lm(data = data, formula = I(log(Output) - log(Capital)) ~ I(log(Labor) - log(Capital)))
summary(res)
# ch3
# ch3
# ch3
# ch3
# ch3
airquality
res1 <- lm(data = airquality, formula = (Solar.R + Wind + Temp)^2)
res1 <- lm(data = airquality, formula = Ozone ~ (Solar.R + Wind + Temp)^2)
res2 <- lm(data = airquality, formula = Ozone ~ Wind + Temp + Solar.R:Temp + Wind:Temp)
summary(res1)
summary(res2)
AIC(res1, res2)
head(Prestige)
x1 <- c(58, 48, 93, 87, 66, 91, 24, 90, 60, 72, 45, 20)
x2 <- c(68, 61, 82, 77, 62, 80, 56, 79, 59, 66, 67, 50)
z <- c(1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1)
res <- lm(formula = x2 ~ x2 + Z)
x1 <- c(58, 48, 93, 87, 66, 91, 24, 90, 60, 72, 45, 20)
x2 <- c(68, 61, 82, 77, 62, 80, 56, 79, 59, 66, 67, 50)
z <- c(1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1)
res <- lm(formula = x2 ~ x2 + z)
summary(res)
# 試験に対する補習の効果の有無の推定
x1 <- c(58, 48, 93, 87, 66, 91, 24, 90, 60, 72, 45, 20)
x2 <- c(68, 61, 82, 77, 62, 80, 56, 79, 59, 66, 67, 50)
z <- c(1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1)
res <- lm(formula = x2 ~ x1 + z)
summary(res)
logit <- function(x) return log(x / (1 - x))
logit <- function(x) return (log(x / (1 - x)))
plot(logit)
read.csv("csv/Beetle.csv")
data <- read.csv("csv/Beetle.csv")
gas <- data$gas
num.beetle <- data$num.beetle
dead.beetle <- data$dead.beetle
cbind(dead.beetle, num.beetle - dead.beetle)
beatle <- cbind(dead.beetle, num.beetle - dead.beetle)
beatle
res <- lm(data = data, formula = I(log(Output) - log(Capital)) ~ I(log(Labor) - log(Capital)))
install.packages("MASS")
library("MASS")
head(Menarche)
head(menarche)
length(menarche)
shape(menarche)
nrow(menarche)
age <- menarche$Age
total <- menarche$Total
menarche <- menarche$Menarche
ratio <- menarche / total
reg <- lm(formula = rario ~ age)
reg <- lm(formula = ratio ~ age)
summary(ratio)
plot(age, ratio)
abline(reg)
summary(reg)
nums <- cbind(menarche, total - menarche)
nums
nums <- cbind(menarche, total - menarche)
logistics <- glm(familiy = binomial(link = "logit"),
formula = nums ~ age)
nums <- cbind(menarche, total - menarche)
logistics <- glm(familiy = binomial(link = "logit"), formula = nums ~ age)
logi <- glm(familiy = binomial(link = "logit"), formula = nums ~ age)
nums <- cbind(menarche, total - menarche)
logi <- glm(family = binomial(link = "logit"), formula = nums ~ age)
summary(logistics)
nums <- cbind(menarche, total - menarche)
logistics <- glm(family = binomial(link = "logit"), formula = nums ~ age)
summary(logistics)
line(age, logistics$fitted)
plot(age, ratio)
abline(reg)
line(age, logistics$fitted)
lines(age, logistics$fitted)
plot(age, ratio)
abline(reg)
lines(age, logistics$fitted, type = "1")
lines(age, logistics$fitted, type = "l")
head(mtcars)
nrows(mtcars)
nrow(mtcars)
cols <- c("mpg", "vs")
subdata <- mtcars[ , cols]
subdata
logistics <- glm(data = subdata, family = binomial(link = "logit"),
formula = vs ~ mpg)
summary(logistics)
exp(coef(logistics))
summary(probit)
probit <- glm(data = subdata, family = binomial(link = "probit"),
formula = vs ~ mpg)
summary(probit)
exp(coef(probit))
AIC(logistics, probit)
plot(mtcars$mpg, mtcars$vs)
curve(predict(logit, data.frame(mpg = x), type = "response"), add = TRUE)
curve(predict(logistics, data.frame(mpg = x), type = "response"), add = TRUE)
curve(predict(probit, data.frame(mpg = x), type = "response"), add = TRUE, type = "o")
TitanicSurvival
titanic <- glm(data = TitanicSurvival, family = binomial(link = "logit"),
formula = survived ~ passengerClass + sex + age)
titanic <- glm(data = TitanicSurvival, family = binomial(link = "logit"),
formula = survived ~ passengerClass + sex + age)
titanic_cross <- glm(data = TitanicSurvival, family = binomial(link = "logit"),
formula = survived ~ passengerClass + sex + age + sex:age)
summary(titanic)
summary(titanic_cross)
AIC(titanic, titanic_cross)
exp(coef(titanic_cross))
# ch13
# 初潮年齢の分析
# install.packages("MASS")
# library("MASS")
head(menarche)
nrow(menarche)
age <- menarche$Age
# ch13
# 初潮年齢の分析
# install.packages("MASS")
# library("MASS")
head(menarche)
nrow(menarche)
age <- menarche$Age
# library("MASS")
head(menarche)
nrow(menarche)
age <- menarche$Age
total <- menarche$Total
Menarche <- menarche$Menarche
ratio <- Menarche / total
# 回帰分析
reg <- lm(formula = ratio ~ age)
summary(reg)
plot(age, ratio)
abline(reg)
# ロジスティック回帰
nums <- cbind(Menarche, total - menarche)
logistics <- glm(family = binomial(link = "logit"), formula = nums ~ age)
# ch13
# 初潮年齢の分析
# install.packages("MASS")
# library("MASS")
head(menarche)
nrow(menarche)
age <- menarche$Age
total <- menarche$Total
Menarche <- menarche$Menarche
ratio <- Menarche / total
# 回帰分析
reg <- lm(formula = ratio ~ age)
summary(reg)
plot(age, ratio)
abline(reg)
# ロジスティック回帰
nums <- cbind(Menarche, total - Menarche)
logistics <- glm(family = binomial(link = "logit"), formula = nums ~ age)
summary(logistics)
plot(age, ratio)
abline(reg)
lines(age, logistics$fitted, type = "l")
# mtcarsの分析
head(mtcars)
nrow(mtcars)
cols <- c("mpg", "vs")
subdata <- mtcars[ , cols]
subdata
# 回帰分析
logistics <- glm(data = subdata, family = binomial(link = "logit"),
formula = vs ~ mpg)
summary(logistics)
exp(coef(logistics))
probit <- glm(data = subdata, family = binomial(link = "probit"),
formula = vs ~ mpg)
summary(probit)
exp(coef(probit))
AIC(logistics, probit) # わずかにプロビット回帰の方が当てはまりが良い
plot(mtcars$mpg, mtcars$vs)
curve(predict(logistics, data.frame(mpg = x), type = "response"), add = TRUE)
curve(predict(probit, data.frame(mpg = x), type = "response"), add = TRUE, type = "o")
# タイタニックデータの回帰分析
TitanicSurvival
titanic <- glm(data = TitanicSurvival, family = binomial(link = "logit"),
formula = survived ~ passengerClass + sex + age)
titanic_cross <- glm(data = TitanicSurvival, family = binomial(link = "logit"),
formula = survived ~ passengerClass + sex + age + sex:age)
summary(titanic)
summary(titanic_cross)
AIC(titanic, titanic_cross)
exp(coef(titanic_cross))
# 交互作用項を入れることで改善。また男性で年齢が高くなると生存率が低くなることがわかる。
# ch13
# 初潮年齢の分析
# install.packages("MASS")
# library("MASS")
head(menarche)
nrow(menarche)
age <- menarche$Age
total <- menarche$Total
Menarche <- menarche$Menarche
ratio <- Menarche / total
# 回帰分析
reg <- lm(formula = ratio ~ age)
summary(reg)
plot(age, ratio)
abline(reg)
# ロジスティック回帰
nums <- cbind(Menarche, total - Menarche)
logistics <- glm(family = binomial(link = "logit"), formula = nums ~ age)
summary(logistics)
plot(age, ratio)
abline(reg)
lines(age, logistics$fitted, type = "l")
# mtcarsの分析
head(mtcars)
nrow(mtcars)
cols <- c("mpg", "vs")
subdata <- mtcars[ , cols]
subdata
# 回帰分析
logistics <- glm(data = subdata, family = binomial(link = "logit"),
formula = vs ~ mpg)
summary(logistics)
exp(coef(logistics))
probit <- glm(data = subdata, family = binomial(link = "probit"),
formula = vs ~ mpg)
summary(probit)
exp(coef(probit))
AIC(logistics, probit) # わずかにプロビット回帰の方が当てはまりが良い
plot(mtcars$mpg, mtcars$vs)
curve(predict(logistics, data.frame(mpg = x), type = "response"), add = TRUE)
curve(predict(probit, data.frame(mpg = x), type = "response"), add = TRUE, type = "o")
# タイタニックデータの回帰分析
TitanicSurvival
titanic <- glm(data = TitanicSurvival, family = binomial(link = "logit"),
formula = survived ~ passengerClass + sex + age)
titanic_cross <- glm(data = TitanicSurvival, family = binomial(link = "logit"),
formula = survived ~ passengerClass + sex + age + sex:age)
summary(titanic)
summary(titanic_cross)
AIC(titanic, titanic_cross)
exp(coef(titanic_cross))
# 交互作用項を入れることで改善。また男性で年齢が高くなると生存率が低くなることがわかる。
data <- read.csv("csv/British Doctors.csv")
data
Deaths <- data$deaths
Pym <- data$pym
Deaths / Pym
Deaths <- data$deaths
Pym <- data$pym
Deaths / Pym *100000
Deaths <- data$deaths
Pym <- data$pym
deathrate <- Deaths / Pym *100000
smkdummy <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
agecat <- c(1:5, 1:5)
res1 <- glm(family = poisson(link = "log"),
formula = deathrate ~ smkdummy + agecat)
res1 <- glm(family = poisson(link = "log"),
formula = deathrate ~ smkdummy*agecat + I(agecat^2))
deathrate <- as.integer(Deaths / Pym *100000)
smkdummy <- c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0)
agecat <- c(1:5, 1:5)
res1 <- glm(family = poisson(link = "log"),
formula = deathrate ~ smkdummy*agecat + I(agecat^2))
res1 <- glm(family = poisson(link = "log"),
formula = deathrate ~ smkdummy*agecat + I(agecat^2))
res2 <- glm(family = poisson(link = "log"),
formula = deathrate ~ smkdummy*agecat)
summary(res1)
summary(res2)
res3 <- glm(family = poisson(link = "log"),
formula = deathrate ~ smkdummy + agecat + I(agecat^2))
summary(res3)
AIC(res1, res2, res3)
exp(coef(res1))
exp(coef(res1))$smkdummy
exp(coef(res1), coef(res2))
exp(coef(res1, res2))
exp(coef(res1))
exp(coef(res2))
exp(coef(res3))
